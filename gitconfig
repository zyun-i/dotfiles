[core]
    editor = vim -c \"set fenc=utf-8\"
[alias]
    a = "!git status --short | fzf | awk '{print $2}' | xargs git add"
    d = diff
    co = checkout
    ci = commit
    ca = commit -a
    ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
    pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
    st = status
    br = branch
    ba = branch -a
    bm = branch --merged
    bn = branch --no-merged
    df = diff
    dff = diff --cached
    dh = "!git hist | fzf | awk '{print $2}' | xargs -I {} git diff {}^ {}"
    hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
    llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
    open = "!hub browse"
    type = cat-file -t
    dump = cat-file -p
    find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | fzf | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
    # edit conflicted file on merge
    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
    # add conflicted file on merge
    add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
    it = !git init && git commit -m root --allow-empty
    cm = commit
    sw = switch
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    lga = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    ph = push origin HEAD
    rs = restore
    identity = "! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; git config user.signingkey \"$(git config user.$1.signingkey)\"; :"
[gpg]
    program = gpg
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[ghq]
    root = ~/src
[include]
    path = ~/.gitconfig.local
[user]
    useConfigOnly = true
[pull]
    ff = only
[credential]
    helper = osxkeychain
[user "identity1"]
    name = Your Name
    email = identity4@example
    signingkey = D921F8BA473CF1FC
[pull]
    ff = only
